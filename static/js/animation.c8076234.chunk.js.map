{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Animation/Animation.jsx","views/Others/Animation/index.js"],"names":["CustomBreadcrumb","props","style","marginBottom","Item","to","arr","map","res","key","path","title","TabPane","typeIn","typeOut","typeOther","AnimationView","state","fontType","changeType","v","console","log","setState","className","gutter","marginTop","span","type","tabPosition","tab","i","size","onClick","bind","ghost","fontSize","textAlign","padding","this","Component"],"mappings":"4JA6BeA,EAxBU,SAAAC,GAAK,OAC1B,uBAAYC,MAAO,CAAEC,aAAc,KAC/B,sBAAYC,KAAZ,KACI,kBAAC,IAAD,CAAMC,GAAG,UAAT,iBAEHJ,EAAMK,KACHL,EAAMK,IAAIC,KAAI,SAAAC,GACV,MAAmB,kBAARA,EAEH,sBAAYJ,KAAZ,CAAiBK,IAAKD,EAAIE,MACtB,kBAAC,IAAD,CAAML,GAAIG,EAAIE,MAAOF,EAAIG,QAI1B,sBAAYP,KAAZ,CAAiBK,IAAKD,GAAMA,QCjBxCR,O,oOCGPY,G,WAAAA,SACFC,EAAS,CACX,eACA,eACA,gBACA,aACA,SACA,aACA,aACA,gBACA,cACA,iBACA,WACA,cACA,UACA,UACA,YAEEC,EAAU,CACZ,YACA,gBACA,gBACA,iBACA,cACA,aACA,UACA,cACA,iBACA,cACA,iBACA,eACA,kBACA,YACA,eACA,aAEEC,EAAY,CACd,WACA,SACA,QACA,QACA,aACA,QACA,YACA,QACA,OACA,SACA,SA8EWC,E,2MA1EXC,MAAQ,CACJC,SAAU,0B,EAEdC,WAAa,SAAAC,GACTC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVL,SAAS,YAAD,OAAcE,M,wEAGpB,IAAD,OACL,OACI,uBAAQI,UAAU,mBACd,6BACI,kBAACxB,EAAA,EAAD,CAAkBM,IAAK,CAAC,eAAM,mBAElC,yBAAKkB,UAAU,cACX,wDACA,4BACA,kGAEJ,uBAAKC,OAAQ,EAAGvB,MAAO,CAAEwB,UAAW,SAChC,uBAAKC,KAAM,IACP,uBAAMC,KAAK,OAAOC,YAAY,QAC1B,kBAACjB,EAAD,CAASkB,IAAI,eAAKrB,IAAI,KACjBI,EAAON,KAAI,SAACa,EAAGW,GAAJ,OACR,uBACIH,KAAK,UACLI,KAAK,QACLvB,IAAKsB,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,OAIb,kBAACR,EAAD,CAASkB,IAAI,eAAKrB,IAAI,KACjBK,EAAQP,KAAI,SAACa,EAAGW,GAAJ,OACT,uBACIH,KAAK,UACLI,KAAK,QACLvB,IAAKsB,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,OAIb,kBAACR,EAAD,CAASkB,IAAI,eAAKrB,IAAI,KACjBM,EAAUR,KAAI,SAACa,EAAGW,GAAJ,OACX,uBACIH,KAAK,UACLI,KAAK,QACLvB,IAAKsB,EACLE,QAAS,EAAKd,WAAWe,KAAK,EAAMd,GACpCe,OAAK,GACJf,SAMrB,uBAAKO,KAAM,IACP,yBACIzB,MAAO,CAAEkC,SAAU,SAAUC,UAAW,SAAUC,QAAS,QAC3Dd,UAAWe,KAAKtB,MAAMC,UAF1B,sB,GA/DIsB,aCrDbxB","file":"static/js/animation.c8076234.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => (\r\n    <Breadcrumb style={{ marginBottom: 16 }}>\r\n        <Breadcrumb.Item>\r\n            <Link to='/index'>首页</Link>\r\n        </Breadcrumb.Item>\r\n        {props.arr &&\r\n            props.arr.map(res => {\r\n                if (typeof res === 'object') {\r\n                    return (\r\n                        <Breadcrumb.Item key={res.path}>\r\n                            <Link to={res.path}>{res.title}</Link>\r\n                        </Breadcrumb.Item>\r\n                    )\r\n                } else {\r\n                    return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\r\n                }\r\n            })}\r\n    </Breadcrumb>\r\n)\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default CustomBreadcrumb\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import React, { Component } from 'react'\r\nimport { Layout, Divider, Row, Col, Button, Tabs } from 'antd'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\nimport '@/style/view-style/animation.scss'\r\n\r\nconst { TabPane } = Tabs\r\nconst typeIn = [\r\n    'bounceInDown',\r\n    'bounceInLeft',\r\n    'bounceInRight',\r\n    'bounceInUp',\r\n    'fadeIn',\r\n    'fadeInDown',\r\n    'fadeInLeft',\r\n    'fadeInLeftBig',\r\n    'fadeInRight',\r\n    'fadeInRightBig',\r\n    'fadeInUp',\r\n    'fadeInUpBig',\r\n    'flipInX',\r\n    'flipInY',\r\n    'rotateIn'\r\n]\r\nconst typeOut = [\r\n    'bounceOut',\r\n    'bounceOutDown',\r\n    'bounceOutLeft',\r\n    'bounceOutRight',\r\n    'bounceOutUp',\r\n    'fadeInDown',\r\n    'fadeOut',\r\n    'fadeOutDown',\r\n    'fadeOutDownBig',\r\n    'fadeOutLeft',\r\n    'fadeOutLeftBig',\r\n    'fadeOutRight',\r\n    'fadeOutRightBig',\r\n    'fadeOutUp',\r\n    'fadeOutUpBig',\r\n    'rotateOut'\r\n]\r\nconst typeOther = [\r\n    'bounceIn',\r\n    'bounce',\r\n    'flash',\r\n    'pulse',\r\n    'rubberBand',\r\n    'shake',\r\n    'headShake',\r\n    'swing',\r\n    'tada',\r\n    'wobble',\r\n    'jello'\r\n]\r\n\r\nclass AnimationView extends Component {\r\n    state = {\r\n        fontType: 'animated bounceInRight'\r\n    }\r\n    changeType = v => {\r\n        console.log(v)\r\n        this.setState({\r\n            fontType: `animated ${v}`\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout className='animated fadeIn'>\r\n                <div>\r\n                    <CustomBreadcrumb arr={['其他', '动画']}></CustomBreadcrumb>\r\n                </div>\r\n                <div className='base-style'>\r\n                    <h3>何时使用</h3>\r\n                    <Divider />\r\n                    <p>当页面需要动态效果时。</p>\r\n                </div>\r\n                <Row gutter={8} style={{ marginTop: '3rem' }}>\r\n                    <Col span={10}>\r\n                        <Tabs type='card' tabPosition='left'>\r\n                            <TabPane tab='进场' key='1'>\r\n                                {typeIn.map((v, i) => (\r\n                                    <Button\r\n                                        type='primary'\r\n                                        size='small'\r\n                                        key={i}\r\n                                        onClick={this.changeType.bind(this, v)}\r\n                                        ghost>\r\n                                        {v}\r\n                                    </Button>\r\n                                ))}\r\n                            </TabPane>\r\n                            <TabPane tab='退场' key='2'>\r\n                                {typeOut.map((v, i) => (\r\n                                    <Button\r\n                                        type='primary'\r\n                                        size='small'\r\n                                        key={i}\r\n                                        onClick={this.changeType.bind(this, v)}\r\n                                        ghost>\r\n                                        {v}\r\n                                    </Button>\r\n                                ))}\r\n                            </TabPane>\r\n                            <TabPane tab='其它' key='3'>\r\n                                {typeOther.map((v, i) => (\r\n                                    <Button\r\n                                        type='primary'\r\n                                        size='small'\r\n                                        key={i}\r\n                                        onClick={this.changeType.bind(this, v)}\r\n                                        ghost>\r\n                                        {v}\r\n                                    </Button>\r\n                                ))}\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col span={14}>\r\n                        <div\r\n                            style={{ fontSize: '4.8rem', textAlign: 'center', padding: '2rem' }}\r\n                            className={this.state.fontType}>\r\n                            Animate.css\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimationView\r\n","import AnimationView from './Animation.jsx'\r\n\r\nexport default AnimationView\r\n"],"sourceRoot":""}