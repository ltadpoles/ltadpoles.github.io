{"version":3,"sources":["components/CustomBreadcrumb/CustomBreadcrumb.jsx","components/CustomBreadcrumb/index.js","views/Others/Upload/Upload.jsx","views/Others/Upload/index.js"],"names":["CustomBreadcrumb","props","style","marginBottom","Item","to","arr","map","res","key","path","title","Dragger","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","getBase_64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","beforeUpload","isJpgOrPng","type","isLt2M","size","UploadView","state","loading","previewVisible","previewImage","uid","url","handleChange","img","callback","addEventListener","getBase64","originFileObj","imageUrl","setState","handleCancel","handlePreview","a","preview","handle_Change","uploadButton","this","className","gutter","span","orientation","listType","onPreview","length","visible","footer","onCancel","alt","width","src","showUploadList","Component"],"mappings":"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","file":"static/js/upload.94779d81.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Breadcrumb } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = props => {\r\n    return (\r\n        <Breadcrumb style={{ marginBottom: 16 }}>\r\n            <Breadcrumb.Item>\r\n                <Link to='/index'>首页</Link>\r\n            </Breadcrumb.Item>\r\n            {props.arr &&\r\n                props.arr.map(res => {\r\n                    if (typeof res === 'object') {\r\n                        return (\r\n                            <Breadcrumb.Item key={res.path}>\r\n                                <Link to={res.path}>{res.title}</Link>\r\n                            </Breadcrumb.Item>\r\n                        )\r\n                    } else {\r\n                        return <Breadcrumb.Item key={res}>{res}</Breadcrumb.Item>\r\n                    }\r\n                })}\r\n        </Breadcrumb>\r\n    )\r\n}\r\n\r\nCustomBreadcrumb.propTypes = {\r\n    arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default CustomBreadcrumb\r\n","import CustomBreadcrumb from './CustomBreadcrumb.jsx'\r\n\r\nexport default CustomBreadcrumb\r\n","import React, { Component } from 'react'\r\nimport { Layout, Row, Col, Upload, message, Button, Icon, Divider, Modal } from 'antd'\r\nimport CustomBreadcrumb from '@/components/CustomBreadcrumb'\r\n\r\nconst { Dragger } = Upload\r\n\r\nconst props = {\r\n    name: 'file',\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    headers: {\r\n        authorization: 'authorization-text'\r\n    },\r\n    onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList)\r\n        }\r\n        if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`)\r\n        } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    reader.readAsDataURL(img)\r\n}\r\n\r\nfunction getBase_64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = error => reject(error)\r\n    })\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n}\r\n\r\nclass UploadView extends Component {\r\n    state = {\r\n        loading: false,\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [\r\n            {\r\n                uid: '-1',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-2',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-3',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-4',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            },\r\n            {\r\n                uid: '-5',\r\n                name: 'image.png',\r\n                status: 'done',\r\n                url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n            }\r\n        ]\r\n    }\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true })\r\n            return\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false })\r\n\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase_64(file.originFileObj)\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true\r\n        })\r\n    }\r\n    handle_Change = ({ fileList }) => this.setState({ fileList })\r\n\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n                <div className='ant-upload-text'>Upload</div>\r\n            </div>\r\n        )\r\n        const { imageUrl, previewVisible, previewImage, fileList } = this.state\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <CustomBreadcrumb arr={['其它', '上传']}></CustomBreadcrumb>\r\n                </div>\r\n                <div className='base-style'>\r\n                    <h3>何时使用</h3>\r\n                    <p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程</p>\r\n                </div>\r\n                <Row gutter={8}>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>普通模式</Divider>\r\n                            <Upload {...props}>\r\n                                <Button>\r\n                                    <Icon type='upload' /> Click to Upload\r\n                                </Button>\r\n                            </Upload>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>照片墙</Divider>\r\n                            <div className='clearfix'>\r\n                                <Upload\r\n                                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                                    listType='picture-card'\r\n                                    fileList={fileList}\r\n                                    onPreview={this.handlePreview}\r\n                                    onChange={this.handle_Change}>\r\n                                    {fileList.length >= 8 ? null : uploadButton}\r\n                                </Upload>\r\n                                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                                    <img alt='example' style={{ width: '100%' }} src={previewImage} />\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>自定义模式</Divider>\r\n                            <Upload\r\n                                name='avatar'\r\n                                listType='picture-card'\r\n                                className='avatar-uploader'\r\n                                showUploadList={false}\r\n                                action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                                beforeUpload={beforeUpload}\r\n                                onChange={this.handleChange}>\r\n                                {imageUrl ? (\r\n                                    <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n                                ) : (\r\n                                    uploadButton\r\n                                )}\r\n                            </Upload>\r\n                        </div>\r\n                        <div className='base-style'>\r\n                            <Divider orientation='left'>可拖拽上传</Divider>\r\n                            <Dragger {...props}>\r\n                                <p className='ant-upload-drag-icon'>\r\n                                    <Icon type='inbox' />\r\n                                </p>\r\n                                <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                                <p className='ant-upload-hint'>\r\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data\r\n                                    or other band files\r\n                                </p>\r\n                            </Dragger>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadView\r\n","import UploadView from './Upload.jsx'\r\n\r\nexport default UploadView\r\n"],"sourceRoot":""}